asigno window.ConstructorDeNovelos como un componente vue2 con nombre "ConstructorDeNovelos" con plantilla {
  <div class="ConstructorDeNovelos Component win7">
    <section class="tabs">
      <menu role="tablist" aria-label="NoveloTabs">
        <button role="tab" v-on:click="() => pestanya_seleccionada = 'vivo'" :aria-selected="pestanya_seleccionada === 'vivo'">
           <div class="emoji"> üî¥ </div>
           <div class="para_tablet_o_mayor" style="white-space:nowrap;">En vivo</div>
        </button>
        <button role="tab" v-on:click="() => pestanya_seleccionada = 'lugares'" :aria-selected="pestanya_seleccionada === 'lugares'">
           <div class="emoji"> üåç </div>
           <div class="para_tablet_o_mayor">Lugares</div>
        </button>
        <button role="tab" v-on:click="() => pestanya_seleccionada = 'personas'" :aria-selected="pestanya_seleccionada === 'personas'">
           <div class="emoji"> üôÇ </div>
           <div class="para_tablet_o_mayor">Personas</div>
        </button>
        <button role="tab" v-on:click="() => pestanya_seleccionada = 'objetos'" :aria-selected="pestanya_seleccionada === 'objetos'">
           <div class="emoji"> üèÄ </div>
           <div class="para_tablet_o_mayor">Objetos</div>
        </button>
        <button role="tab" v-on:click="() => pestanya_seleccionada = 'prototipos'" :aria-selected="pestanya_seleccionada === 'prototipos'">
           <div class="emoji"> üåê </div>
           <div class="para_tablet_o_mayor">Prototipos</div>
        </button>
        <button role="tab" v-on:click="() => pestanya_seleccionada = 'eventos'" :aria-selected="pestanya_seleccionada === 'eventos'">
           <div class="emoji"> üí° </div>
           <div class="para_tablet_o_mayor">Eventos</div>
        </button>
        <button role="tab" v-on:click="() => pestanya_seleccionada = 'variables'" :aria-selected="pestanya_seleccionada === 'variables'">
           <div class="emoji"> ‚Üî </div>
           <div class="para_tablet_o_mayor">Variables</div>
        </button>
        <button role="tab" v-on:click="() => pestanya_seleccionada = 'funciones'" :aria-selected="pestanya_seleccionada === 'funciones'">
           <div class="emoji"> ∆í </div>
           <div class="para_tablet_o_mayor">Funciones</div>
        </button>
        <button role="tab" v-on:click="() => pestanya_seleccionada = 'sucesos'" :aria-selected="pestanya_seleccionada === 'sucesos'">
           <div class="emoji"> üéû </div>
           <div class="para_tablet_o_mayor">Sucesos</div>
        </button>
        <button role="tab" v-on:click="() => pestanya_seleccionada = 'preferencias'" :aria-selected="pestanya_seleccionada === 'preferencias'">
           <div class="emoji"> ‚öôÔ∏è </div>
           <div class="para_tablet_o_mayor">Preferencias</div>
        </button>
        <button v-show="false" role="tab" v-on:click="() => { $window.comp = this; $window.console.log(this); }" :aria-selected="pestanya_seleccionada === 'preferencias'">
           <div class="emoji"> ‚öôÔ∏è‚öôÔ∏è‚öôÔ∏è </div>
           <div class="para_tablet_o_mayor">Debug</div>
        </button>
      </menu>
      <article role="tabpanel" v-if="typeof pestanya_seleccionada === 'undefined'">
        <div role="progressbar" class="animate">
          <div style="width: 100%"></div>
        </div>
      </article>
      <article role="tabpanel" v-else-if="pestanya_seleccionada === 'vivo'" key="vivo">
        <div class="titulo_de_pestanya"> üî¥ En vivo</div>
        <NoveloVistaEnVivo :raiz="this" />
      </article>
      <article role="tabpanel" v-else-if="pestanya_seleccionada === 'lugares'" key="lugares">
        <div class="titulo_de_pestanya"> üåç Lugares</div>
        <EditorDeObjeto :raiz="this" almacen="lugares" palabra="lugar" key="editor_de_lugares" />
      </article>
      <article role="tabpanel" v-else-if="pestanya_seleccionada === 'personas'" key="personas">
        <div class="titulo_de_pestanya"> üôÇ Personas</div>
        <EditorDeObjeto :raiz="this" almacen="personas" palabra="persona" key="editor_de_personas" />
      </article>
      <article role="tabpanel" v-else-if="pestanya_seleccionada === 'objetos'" key="objetos">
        <div class="titulo_de_pestanya"> üèÄ Objetos</div>
        <EditorDeObjeto :raiz="this" almacen="objetos" palabra="objeto" key="editor_de_objetos" />
      </article>
      <article role="tabpanel" v-else-if="pestanya_seleccionada === 'prototipos'" key="prototipos">
        <div class="titulo_de_pestanya"> üåê Prototipos</div>
        <EditorDeObjeto :raiz="this" almacen="prototipos" palabra="prototipo" key="editor_de_prototipos" />
      </article>
      <article role="tabpanel" v-else-if="pestanya_seleccionada === 'variables'" key="variables">
        <div class="titulo_de_pestanya"> üåê Variables</div>
        <EditorDeObjeto :raiz="this" almacen="variables" palabra="variable" key="editor_de_variables" />
      </article>
      <article role="tabpanel" v-else-if="pestanya_seleccionada === 'funciones'" key="funciones">
        <div class="titulo_de_pestanya"> ∆í Funciones</div>
        <EditorDeObjeto :raiz="this" almacen="funciones" palabra="funcion" key="editor_de_funciones" />
      </article>
      <article role="tabpanel" v-else-if="pestanya_seleccionada === 'eventos'" key="eventos">
        <div class="titulo_de_pestanya"> üí° Eventos</div>
        <EditorDeObjeto :raiz="this" almacen="eventos" palabra="evento" key="editor_de_eventos" />
      </article>
      <article role="tabpanel" v-else-if="pestanya_seleccionada === 'verbos'" key="verbos">
        <div class="titulo_de_pestanya"> üí° Verbos</div>
        <EditorDeObjeto :raiz="this" almacen="eventos" palabra="evento" key="editor_de_eventos" />
      </article>
      <article role="tabpanel" v-else-if="pestanya_seleccionada === 'sucesos'" key="sucesos">
        <div class="titulo_de_pestanya"> üéû Sucesos</div>
        <EditorDeObjeto :raiz="this" almacen="sucesos" palabra="suceso" key="editor_de_sucesos" />
      </article>
      <article role="tabpanel" v-else-if="pestanya_seleccionada === 'preferencias'" key="preferencias">
        <div class="titulo_de_pestanya"> ‚öôÔ∏è Preferencias</div>
        <EditorDeObjeto :raiz="this" almacen="preferencias" palabra="preferencia" key="editor_de_preferencias" />
      </article>
    </section>
  </div>
} con l√≥gica {
  retorno {
    propiedad props como {
      lugaresDisponibles: {
        propiedad type como Array.
        propiedad default como una funci√≥n donde retorno [].
      },
      personasDisponibles: {
        propiedad type como Array.
        propiedad default como una funci√≥n donde retorno [].
      },
      objetosDisponibles: {
        propiedad type como Array.
        propiedad default como una funci√≥n donde retorno [].
      },
      prototiposDisponibles: {
        propiedad type como Array.
        propiedad default como una funci√≥n donde retorno [].
      },
      variablesDisponibles: {
        propiedad type como Array.
        propiedad default como una funci√≥n donde retorno [].
      },
      funcionesDisponibles: {
        propiedad type como Array.
        propiedad default como una funci√≥n donde retorno [].
      },
      eventosDisponibles: {
        propiedad type como Array.
        propiedad default como una funci√≥n donde retorno [].
      },
      sucesosDisponibles: {
        propiedad type como Array.
        propiedad default como una funci√≥n donde retorno [].
      },
      preferenciasDisponibles: {
        propiedad type como Array.
        propiedad default como una funci√≥n donde retorno [].
      },
      almacenDeLocalStorage: {
        propiedad type como String.
        propiedad default como "_novelo_almacen_por_defecto_".
      }
    }.
    m√©todo data donde {
      debugo "ConstructorDeNovelos.data".
      creo data como {
        esta_cargado: false,
        lugares_disponibles: this.lugaresDisponibles,
        personas_disponibles: this.personasDisponibles,
        objetos_disponibles: this.objetosDisponibles,
        prototipos_disponibles: this.prototiposDisponibles,
        variables_disponibles: this.variablesDisponibles,
        funciones_disponibles: this.funcionesDisponibles,
        eventos_disponibles: this.eventosDisponibles,
        sucesos_disponibles: this.sucesosDisponibles,
        preferencias_disponibles: this.preferenciasDisponibles,
        pestanya_seleccionada: this.pestanyaSeleccionada
      }.
      asigno data.claves_persistibles como un conjunto de claves del objeto data.
      hago data extendido por {
        en_vivo_datos: un nuevo this.$window.juego_de_novelo()
      }.
      hago this extendido por this.cargar(false).
      retorno data.
    }.
    propiedad methods como {
      recargar_ui: una funci√≥n donde {
        debugo "ConstructorDeNovelos.methods.recargar_ui".
      },
      cargar: una funci√≥n (actualizar_instancia o en su defecto true) donde {
        debugo "ConstructorDeNovelos.methods.cargar".
        hago this extendido por un intento donde {
          retorno localStorage[this.almacenDeLocalStorage] parseado como json.
        } en errores {
          imprimo error.
          retorno {}.
        }.
      },
      guardar: una funci√≥n donde {
        debugo "ConstructorDeNovelos.methods.guardar".
        asigno localStorage[this.almacenDeLocalStorage] como un intento donde {
          creo memorizable como this mostrando solo propiedades this.claves_persistibles.
          imprimo memorizable.
          creo memorizado como memorizable textualizado.
          retorno memorizado.
        } en errores {
          imprimo error.
          lanzo error.
          retorno "{}".
        }.
      },
      agregar: una funci√≥n (tipo, nombre o en su defecto undefined) donde {
        debugo "ConstructorDeNovelos.methods.agregar".
        creo almacen_id como tipo + "_disponibles".
        creo dato como { esta_mostrando_detalles: true }.
        si nombre es tipo texto asigno dato.nombre como nombre.
        apendizo dato en this[almacen_id].
        retorno this[almacen_id].length - 1.
      },
      alternar: una funci√≥n (tipo, indice) donde {
        debugo "ConstructorDeNovelos.methods.alternar".
        creo almacen_id como tipo + "_disponibles".
        asigno this[almacen_id][indice].esta_mostrando_detalles como cuando this[almacen_id][indice].esta_mostrando_detalles es igual que false entonces true si no false.
        retorno indice.
      },
      eliminar: una funci√≥n (tipo, indice) donde {
        debugo "ConstructorDeNovelos.methods.eliminar".
        hago this[tipo + "_disponibles"].splice(indice, 1).
        retorno true.
      }
    }.
    propiedad watch como {
      pestanya_seleccionada: una funci√≥n con (valor) donde {
        debugo "ConstructorDeNovelos.watch.pestanya_seleccionada".
      }
    }.
    m√©todo mounted donde {
      debugo "ConstructorDeNovelos.mounted".
      hago this.cargar().
      asigno this.pestanya_seleccionada como "lugares".
      hago this.$forceUpdate(true).
    }.
  }.
}.