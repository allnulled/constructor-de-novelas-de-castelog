asigno window.NoveloControlDeListaDeTextos como un componente vue2 con nombre "NoveloControlDeListaDeTextos" con plantilla {
  <div class="NoveloControlDeListaDeTextos Component">
    <button class="w_100 " v-on:click="() => valor.push('')"> ➕ Añadir {{ palabra }}</button>
    <div v-for="item, item_index in valor" v-bind:key="'control-de-lista-' + uuid + '-item-' + item_index" style="margin-top:1px;">
      <div class="w_100 horizontal_layout titulo_de_ventanuco">
        <div class="w_100" style="align-self: center; padding-left: 4px;">q</div>
        <button class="boton_lateral active"><span>－</span></button>
        <button class="boton_lateral ">❌</button>
      </div>
      <div class="w_100">
        <div class="w_100" style="padding-right:1px;">
          <textarea class="texto_humano w_100" v-model="valor[item_index]" :placeholder="relleno"></textarea>
        </div>
      </div>
    </div>
  </div>
} con lógica {
  retorno {
    propiedad props como {
      uuid: {
        propiedad type como String.
        propiedad default como una función donde retorno un texto aleatorio de 10 caracteres.
      },
      raiz: {
        propiedad type como Object.
        propiedad required como true.
      },
      alCambiar: {
        propiedad type como Function.
        propiedad default como una función.
      },
      valorInicial: {
        propiedad type como Array.
        propiedad default como una función donde retorno [].
      },
      relleno: {
        propiedad type como String.
        propiedad default como una función donde retorno "Texto aquí".
      },
      palabra: {
        propiedad type como String.
        propiedad default como una función donde retorno "ítem".
      }
    }.
    método data donde {
      retorno {
        valor: this.valorInicial
      }.
    }.
    propiedad watch como {
      método valor con (nuevo_valor) donde {
        si this.alCambiar es tipo función hago this.alCambiar(nuevo_valor, this).
      }.
    }.
    método mounted donde {
        ### ...
    }.
  }.
}.